name: Elixir CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    name: Test OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        otp: ['22.2', '23.0']
        elixir: ['1.7.4', '1.8.2', '1.9.4', '1.10.4', '1.11.1']
        exclude:
          - otp: '23.0'
            elixir: '1.7.4'
          - otp: '23.0'
            elixir: '1.8.2'
          - otp: '23.0'
            elixir: '1.9.4'
          - otp: '23.0'
            elixir: '1.10.4'
    steps:
    - uses: actions/checkout@v2
    - name: Set up Elixir
      uses: actions/setup-elixir@v1
      with:
        elixir-version: ${{matrix.elixir}}
        otp-version: ${{matrix.otp}}

    - name: Restore dependencies cache
      uses: actions/cache@v2
      with:
        path: deps
        key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-

    - name: Install dependencies
      run: mix deps.get

    - name: Check format
      run: mix format --check-formatted lib/**/*.ex

    - name: Restore PLT Cache
      uses: actions/cache@v1
      id: plt-cache
      with:
        path: priv/plts
        key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-plts

    - name: Create PLTs
      if: steps.plt-cache.outputs.cache-hit != 'true'
      run: |
        mkdir -p priv/plts
        mix dialyzer --plt

    - name: Typecheck
      run: mix dialyzer --halt-exit-status

    - name: Run tests
      run: mix coveralls.github --include property_based
      env:
        ASSERT_RECEIVE_TIMEOUT: 300
        MIX_ENV: test
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
